import personajes.personaje_class.*
import personajes.personajeNoControlado_class.*
import hechizos.hechizo_class.*
import hechizos.logo_class.*
import hechizos.hechizos.*
import fuerzaOscura.fuerzaOscura.*
import artefactos.artefacto_class.*
import artefactos.artefactos.*
import artefactos.arma_class.*
import comerciantes.comerciante_class.*


describe "Peso de los Artefactos"{
	const espadaVieja = new Arma(7)
	const espadaNueva = new Arma(4)
	const espadaComun = new Arma(5)
	const mascaraOscura = new Mascara(peso = 3, indiceOscuridad = 1, minimo = 0)
	const mascaraClara = new Mascara(peso = 2, indiceOscuridad = 0, minimo = 0)
	const armaduraReforzada = new Armadura(10)
	const cotaDeMalla = new CotaDeMalla(1)
	const armaduraMagica = new Armadura(12)
	const hechizoPar = hechizoComercial
	const armadura = new Armadura(12)
	const mockHnos = new Comerciante(categoria = independiente, artefactos =[mascaraOscura, mascaraClara, armaduraMagica])
	const merlin   = new Personaje(monedas = 100, limiteDePeso = 10)
	const ursula   = new Personaje(monedas = 100, artefactos = #{mascaraOscura, cotaDeMalla}, limiteDePeso = 200)
	
	fixture {
		espadaVieja.fechaCompra(new Date(7, 5, 2016))
		espadaComun.fechaCompra((new Date()).minusDays(50))
		armaduraReforzada.refuerzo(cotaDeMalla)
	}
	test "Peso de espada vieja" {
		assert.equals(6, espadaVieja.calcularPeso())
	}
	test "Peso de Espada Nueva" {
		assert.equals(4, espadaNueva.calcularPeso())
	}
	test "Peso de Espada Comun" {
		assert.equals(4.5, espadaComun.calcularPeso())
	}

	test "Peso de Collar Divino" {
		assert.equals(2.5, collarDivino.calcularPeso())
	}

	test "Peso de Mascara Osucura" {
		assert.equals(3, mascaraOscura.calcularPeso())
	}

	test "Peso de Mascara Oscura luego de un Eclipse" {
		fuerzaOscura.eclipse()
		assert.equals(5, mascaraOscura.calcularPeso())
	}

	test "Peso mascara clara" {
		assert.equals(2, mascaraClara.calcularPeso())
	}

	test "Peso de Armadura con cota de malla" {
		assert.equals(11, armaduraReforzada.calcularPeso())
	}

	test "Peso de Armadura con hechizo par" {
		armaduraMagica.refuerzo(hechizoPar)
		assert.equals(14, armaduraMagica.calcularPeso())
	}

	test "Peso de Armadura con hechizo impar" {
		armaduraMagica.refuerzo(espectroMalefico)
		assert.equals(13, armaduraMagica.calcularPeso())
	}

	test "Peso de Armadura sin refuerzo" {
		assert.equals(12, armadura.calcularPeso())
	}
	
	test "Peso total que carga Merlín luego de comprar a Mock Hnos. la máscara clara y la oscura (sin que haya eclipse) "{
		merlin.adquirirArtefacto(mascaraClara, mockHnos)
		merlin.adquirirArtefacto(mascaraOscura, mockHnos)
		assert.equals(5,merlin.pesoTotal())
	}
	
	test "Merlín le quiere comprar a Mock Hnos. la armadura con hechizo par"{
		armaduraMagica.refuerzo(hechizoPar)
		assert.throwsException({merlin.adquirirArtefacto(armaduraMagica, mockHnos)})
	}
	
	test "Peso total de Ursula, luego de desprenderse de la armadura con cota de malla"{
		ursula.sacarArtefacto(cotaDeMalla)
		assert.equals(3,ursula.pesoTotal())
	} 	
}